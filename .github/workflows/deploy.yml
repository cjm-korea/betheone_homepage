name: Build & Deploy to ECS

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      AWS_DEFAULT_REGION: ap-northeast-1
      ECR_IMAGE: betheone-homepage

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'


      - name: Set up QEMU for x86_64
        if: runner.os == 'Linux'
        run: 
          docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

      - name: Set up Docker for x86_64
        uses: docker/setup-qemu-action@v2
        with:
          platforms: linux/x86_64

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: $AWS_DEFAULT_REGION

      - name: Login to Amazon ECR
        run:
          aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID}}.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com

      - name: Build and push Docker image
        run:
          docker buildx create --use
          docker buildx inspect --bootstrap
          docker buildx build --platform linux/x86_64 -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$ECR_IMAGE:latest --push .

      - name: Deploy to ECS
        uses: imehedi/actions-awscli-v2@latest
        env:
          CLUSTER_NAME: ${{ secrets.ECS_CLUSTER }}
          SERVICE_NAME: ${{ secrets.ECS_SERVICE }}
        with: 
          args: 
            ecs update-service --cluster $CLUSTER_NAME --service $SERVICE_NAME --force-new-deployment